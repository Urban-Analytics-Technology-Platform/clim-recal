---
title: "UKCP 2.2 Temporal Interpolation"
format:
  html:
    code-fold: true
execute:
  cache: true
jupyter: python3
---

To align climate projections with measured records, we interpolate five or six extra time points---standard or leap years respectively---per year.

```{python}
#| label: tasmax-time-series

from typing import Final
from pathlib import Path

from xarray.core.types import T_Dataset
from xarray import open_dataset
from matplotlib import pyplot as plt
from matplotlib.figure import Figure

from clim_recal.utils.data import VariableOptions, RunOptions
from clim_recal.utils.xarray import (
    annual_group_xr_time_series,
    join_xr_time_series_var,
    plot_xarray,
)
from clim_recal.utils.core import climate_data_mount_path

plot_folder: Final[Path] = Path("./assets")
cpm_raw_median_folder: Final[Path] = plot_folder / 'cpm-raw-medians'

cpm_tasmax_raw_paths: Final[Path] = [
    cpm_raw_median_folder / f"median-{variable}-{run}.nc"
    for run in RunOptions
    for variable in VariableOptions
]
cpm_tasmax_run_01_annual_ts: Final[T_Dataset]

if cpm_raw_median_folder.is_folder():
    cpm_tasmax_run_01_annual_ts = open_dataset(cpm_tasmax_raw_paths[0])
else:
    raw_tasmax_run_01_path: Final[Path] = (
        climate_data_mount_path() / 'Raw/UKCP2.2/tasmax/01/latest'
    )
    cpm_tasmax_run_01_annual_ts = join_xr_time_series_var(
        raw_tasmax_run_01_path,
        VariableOptions.TASMAX,
    )
    cpm_tasmax_run_01_annual_ts.to_netcdf(cpm_tasmax_run_01_path)
```

With the CPM annual timeseries loaded, we can now plot projections from 1 December 1980 to 30 November 2080:

```{python}
#| label: fig-tasmax-time-series
#| fig-cap: "Raw CPM tasmax projection 360 day years"

# cpm_ts: Figure = plot_xarray(
#     cpm_tasmax_run_01_annual_ts.data_vars[VariableOptions.TASMAX],
#     path=plot_folder / f'annual-{VariableOptions.TASMAX}.pdf',
#     time_stamp=False,
#     return_path=False,
# )
# cpm_ts
plt.show()
```

Average annual projections.

```{python}
#| label: fig-tasmax-annual-means
#| fig-cap: "Annual average of means of raw tasmax CPM 360 day years"

annual_means: T_Dataset = annual_group_xr_time_series(cpm_tasmax_run_01_annual_ts,
                                                      variable_name=VariableOptions.TASMAX,
                                                      plot_path=None,
                                                      time_stamp=None)
plot_xarray(
    annual_means[VariableOptions.TASMAX],
    path=plot_folder / f'annual-aggregated-{VariableOptions.TASMAX}.pdf',
    time_stamp=False,
)
plt.show()
```

Leap year projection.
```{python}
#| label: fig-tasmax-leap-means
#| fig-cap: "Leap year average of means of raw tasmax CPM 360 day years"

leap_annual_means: T_Dataset = cpm_tasmax_run_01_annual_ts.where(cpm_tasmax_run_01_annual_ts % 4 == 0)

plot_xarray(
    leap_annual_means[VariableOptions.TASMAX],
    path=plot_folder / f'leap-year-aggregated-{VariableOptions.TASMAX}.pdf',
    time_stamp=False,
)
plt.show()
```
